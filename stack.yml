AWSTemplateFormatVersion: 2010-09-09

Description: AWS CloudFormation Template for the To-do app

Parameters:
  EnvironmentParameter: 
    Type: String
    Default: production

  AvailabilityZoneParameter: 
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-central-1a

  ImageParameter: 
    Type: AWS::EC2::Image::Id
    Default: ami-00a205cb8e06c3c4e

  InstanceTypeParameter: 
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro

  KeyPairNameParameter: 
    Type: AWS::EC2::KeyPair::KeyName
    Default: ec2-user

  VolumeSizeParameter: 
    Type: Number
    Default: 8
    AllowedValues: 
      - 8
      - 16

  OrgAccessTokenParameter: 
    Type: String
  
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Ref AvailabilityZoneParameter
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  Route:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  SshSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  FeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Enable access to the FE via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ApiSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Enable access to the API via port 3000
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

  MongoExpressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Enable access to Mongo Express via port 8081
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: 0.0.0.0/0

  MongoSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Enable access to MongoDB via port 27017
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27017
          CidrIp: 0.0.0.0/0

  NetworkInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref Subnet
      GroupSet: 
        - !Ref SshSecurityGroup
        - !Ref FeSecurityGroup
        - !Ref ApiSecurityGroup
        - !Ref MongoExpressSecurityGroup
        - !Ref MongoSecurityGroup
      SourceDestCheck: true

  ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      NetworkInterfaceId: !Ref NetworkInterface
      AllocationId: !GetAtt ElasticIp.AllocationId

  Role: 
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
        - Effect: Allow
          Principal: 
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: /

  Policy: 
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: role-to-do-app
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"
      Roles:
        - !Ref Role

  InstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles:
        - !Ref Role

  ToDoApp:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageParameter
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyPairNameParameter
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref VolumeSizeParameter
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref NetworkInterface
          DeviceIndex: 0
      Volumes:
        - Device: /dev/sdh
          VolumeId: vol-0026fdf6eb3da2055
      IamInstanceProfile: !Ref InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y
  
          mkfs -t xfs /dev/xvdh
          mkdir /mongodb      
          echo "/dev/xvdh /mongodb  xfs  defaults,nofail 0 2" >> /etc/fstab
          mount -a

          amazon-linux-extras install docker -y
          service docker start
          usermod -a -G docker ec2-user
          curl \
            --location \
            --output /usr/local/bin/docker-compose \
            "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)"
          chmod +x /usr/local/bin/docker-compose
          ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

          yum install jq -y
          mkdir ${EnvironmentParameter}-actions-runner
          cd ${EnvironmentParameter}-actions-runner
          curl \
            --location \
            --remote-name \
            https://github.com/actions/runner/releases/download/v2.273.5/actions-runner-linux-x64-2.273.5.tar.gz
          tar xzf ./actions-runner-linux-x64-2.273.5.tar.gz
          export RUNNER_ALLOW_RUNASROOT=true
          export TOKEN=$(\
            curl \
              -X POST \
              --header "Authorization: token ${OrgAccessTokenParameter}" \
              https://api.github.com/orgs/to-do-app/actions/runners/registration-token \
            | \
            jq -r .token\
          )
          ./config.sh \
            --unattended \
            --url https://github.com/to-do-app \
            --token $TOKEN \
            --name ${EnvironmentParameter} \
            --labels ${EnvironmentParameter} \
            --replace
          ./svc.sh install
          ./svc.sh start
