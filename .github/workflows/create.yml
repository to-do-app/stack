name: Manual create

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'eu-central-1'
      availability-zone: 
        description: 'AWS Availability Zone'
        required: true
        default: 'eu-central-1a'
      environment:
        description: 'Environment'
        required: true
        default: 'production'
      api-tag:
        description: 'API tag'
        required: true
        default: latest
      front-end-tag:
        description: 'Front-end tag'
        required: true
        default: latest

jobs:
  create:
    runs-on: [self-hosted, builder]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.region}}

    - name: Create stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
      with:
        name: stack-todoapp-${{ github.event.inputs.environment }}
        template: stack.yml
        no-fail-on-empty-changeset: "1"
        disable-rollback: "1"
        parameter-overrides: >-
          EnvironmentParameter=${{ github.event.inputs.environment }},
          AvailabilityZoneParameter=${{ github.event.inputs.availability-zone }},
          ImageParameter=ami-00a205cb8e06c3c4e,
          InstanceTypeParameter=t2.micro,
          KeyPairNameParameter=ec2-user,
          VolumeSizeParameter=8,
          OrgAccessTokenParameter=${{ secrets.ORG_ACCESS_TOKEN }}

  deploy-duckdns:
    if: ${{ github.event.inputs.environment == 'production' }}
    needs: create
    runs-on: [self-hosted, "${{ github.event.inputs.environment }}"]
    steps:
      - name: Deploy DuckDNS
        run: |
          docker run \
            --detach \
            --name=duckdns \
            --env TZ=Europe/Madrid \
            --env SUBDOMAINS=todoapp.duckdns.org \
            --env TOKEN=${{ secrets.DUCKDNS_TOKEN }} \
            --restart unless-stopped \
            ghcr.io/linuxserver/duckdns

  run-certbot:
    if: ${{ github.event.inputs.environment == 'production' }}
    needs: deploy-duckdns
    runs-on: [self-hosted, "${{ github.event.inputs.environment }}"]
    continue-on-error: true
    steps:
      - name: Run Certbot
        run: |
          mkdir --parents /etc/letsencrypt/live/todoapp.duckdns.org
          mkdir /var/lib/letsencrypt
          docker run \
            --rm \
            --name certbot \
            --mount type=bind,source=/etc/letsencrypt,target=/etc/letsencrypt \
            --mount type=bind,source=/var/lib/letsencrypt,target=/var/lib/letsencrypt \
            --publish 80:80 \
            --publish 443:443 \
            certbot/certbot \
            certonly \
              --standalone \
              --non-interactive \
              --agree-tos \
              --email alvarogarciafer@gmail.com \
              --domains todoapp.duckdns.org

  trigger-deploy-api:
    needs: run-certbot
    runs-on: [self-hosted, "${{ github.event.inputs.environment }}"]
    steps:
      - name: Trigger API repository_dispatch event
        run: |
          curl \
            -X POST \
            --header "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
            --header "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/to-do-app/api/dispatches \
            --data '{
              "event_type":"deploy",
              "client_payload": {
                "environment": "${{ github.event.inputs.environment }}",
                "tag": "${{ github.event.inputs.api-tag }}"
              }
            }'

  trigger-deploy-front-end:
    needs: run-certbot
    runs-on: [self-hosted, "${{ github.event.inputs.environment }}"]
    steps:
      - name: Trigger front-end repository_dispatch event
        run: |
          curl \
            -X POST \
            --header "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
            --header "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/to-do-app/front-end/dispatches \
            --data '{
              "event_type":"deploy",
              "client_payload": {
                "environment": "${{ github.event.inputs.environment }}",
                "tag": "${{ github.event.inputs.front-end-tag }}"
              }
            }'
